models:
   image: tp33/django
   external_links:
      - mysql:db
   # ports:
   #    - "8001:8000"
   volumes:
      - ./models/:/app
   command: bash -c "python ./manage.py makemigrations models && python ./manage.py migrate && python ./manage.py loaddata db.json && mod_wsgi-express start-server --reload-on-changes ./models/wsgi.py && docker run -it --name web -p 8001:8000"

exp:
   image: tp33/django
   links:
      - models:models-api
      - kafka:kafka
      - es:es
   # ports:
   #    - "8002:8000"
   volumes:
      - ./exp/:/app
   command: bash -c "pip install requests && mod_wsgi-express start-server --reload-on-changes ./exp/wsgi.py"

web1:
   image: tp33/django
   links:
      - exp:exp-api
   ports:
      - "8003:8000"
   volumes:
      - ./web/:/app
   command: bash -c "pip install requests && mod_wsgi-express start-server --reload-on-changes ./web/wsgi.py"

web2:
   image: tp33/django
   links:
      - exp:exp-api
   ports:
      - "8006:8000"
   volumes:
      - ./web/:/app
   command: bash -c "pip install requests && mod_wsgi-express start-server --reload-on-changes ./web/wsgi.py"

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   volumes:
      - ./:/app
   command: bash -c "python ./search_indexer.py"

load_balancer:
  image: my-haproxy
  container_name: load_balancer
  ports:
    - "8005:8000"
  links:
    - web1:web1
    - web2:web2
  volumes:
    - ./hap/:/haproxy.cfg
